{"version":3,"sources":["components/App/ContactForm/ContactForm.jsx","components/App/common/Paper/Paper.jsx","components/App/ContactList/ContactList.jsx","components/App/Filter/Filter.jsx","components/App/App.jsx","components/App/services/localStorage.js","index.js","components/App/App.module.css"],"names":["ContactForm","onSubmitForm","contacts","useState","name","setName","number","setNumber","onChangeInput","e","target","value","reset","className","s","contacsForm","onSubmit","preventDefault","id","nanoid","label","title","textField","type","onChange","placeholder","required","pattern","addBtn","Paper","children","ContactList","onDelete","map","onClick","Filter","STORAGE_KEY","App","key","JSON","parse","localStorage","getItem","error","storage","setContacts","filter","setFilter","useEffect","setItem","stringify","wrap","newContact","some","contact","alert","subtitle","elem","toLowerCase","includes","onFilterChange","prevContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b0c27131.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmitForm, contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    onSubmitForm({\n      id: nanoid(),\n      name,\n      number,\n    });\n    reset();\n  };\n\n  const onChangeInput = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.contacsForm} onSubmit={onSubmit}>\n      <label className={s.label}>\n        <span className={s.title}>Name:</span>\n        <input\n          className={s.textField}\n          type=\"text\"\n          onChange={onChangeInput}\n          value={name}\n          name=\"name\"\n          placeholder=\"your name\"\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        <span className={s.title}>Number:</span>\n        <input\n          className={s.textField}\n          type=\"tel\"\n          onChange={onChangeInput}\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"your number\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={s.addBtn}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nconst Paper = ({ children }) => {\n  return <div>{children}</div>;\n};\n\nPaper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Paper;\n","import Paper from '../common/Paper/Paper';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <Paper key={id}>\n        <li>\n          <span>{name}</span>: {number}\n        </li>\n        <button type=\"button\" onClick={() => onDelete(id)}>\n          Delete\n        </button>\n      </Paper>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <label>\n        <span>Find contacts by name</span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"example: Ivan\"\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  onFilterChange: PropTypes.func,\n};\n\nexport default Filter;\n","// import { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport * as storage from './services/localStorage';\nimport { useState, useEffect } from 'react';\nimport s from './App.module.css';\n\nconst STORAGE_KEY = 'contacts';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(\n    () => storage.get(STORAGE_KEY) ?? [],\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    storage.save(STORAGE_KEY, contacts);\n  }, [contacts]);\n\n  const onSubmit = newContact => {\n    const { id, name, number } = newContact;\n    const isInContactList = contact => contact.name === newContact.name;\n\n    contacts.some(isInContactList)\n      ? alert(`${newContact.name} is already in contacts`)\n      : setContacts(contacts => [...contacts, { id, name, number }]);\n  };\n\n  const onChangeInput = e => {\n    setFilter(e.target.value);\n  };\n\n  const onFilterChange = () => {\n    const value = filter;\n    return contacts.filter(elem =>\n      elem.name.toLowerCase().includes(value.toLowerCase()),\n    );\n  };\n\n  const deleteContact = id => {\n    setContacts(prevContacts => prevContacts.filter(elem => elem.id !== id));\n  };\n  return (\n    <>\n      <div className={s.wrap}>\n        <ContactForm onSubmitForm={onSubmit} contacts={contacts} />\n      </div>\n      <h2 className={s.subtitle}>Contacts:</h2>\n      <Filter value={filter} onChange={onChangeInput} />\n      <ContactList contacts={onFilterChange()} onDelete={deleteContact} />\n    </>\n  );\n};\n\nexport default App;\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__GTkXP\",\"contantWrap\":\"App_contantWrap__3Z7Jw\",\"title\":\"App_title__1Yg98\",\"subtitle\":\"App_subtitle__1NUhB\"};"],"sourceRoot":""}