{"version":3,"sources":["components/App/ContactForm/ContactForm.jsx","components/App/common/Paper/Paper.jsx","components/App/ContactList/ContactList.jsx","components/App/Filter/Filter.jsx","components/App/App.jsx","components/App/services/localStorage.js","index.js"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","reset","e","preventDefault","id","nanoid","type","onChange","target","value","placeholder","required","pattern","title","Paper","children","ContactList","contacts","onDelete","map","onClick","Filter","STORAGE_KEY","App","state","filter","newContact","some","contact","alert","setState","prevState","onChangeInput","onFilterChange","elem","toLowerCase","includes","deleteContact","savedContacts","key","JSON","parse","localStorage","getItem","error","storage","this","prevProps","setItem","stringify","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.651e28b6.chunk.js","sourcesContent":["import { useState } from 'react';\n// import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\n// Рефакторим класс ContactForm\n// Используем хук useState()\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({\n      id: nanoid(),\n      name,\n      number,\n    });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  //   onSubmit = e => {\n  //     e.preventDefault();\n\n  //     const { name, number } = this.state;\n\n  //     this.props.onSubmit({\n  //       id: nanoid(),\n  //       name,\n  //       number,\n  //     });\n  //     this.reset();\n  //   };\n\n  // const onChangeInput = e => {\n  //   const { name, value } = e.target;\n\n  //   this.setState({ [name]: value });\n  // };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <span>Name:</span>\n        <input\n          type=\"text\"\n          onChange={e => setName(e.target.value)}\n          value={name}\n          name=\"name\"\n          placeholder=\"example: Boykova Marina\"\n          required\n        />\n      </label>\n\n      <label>\n        <span>Number:</span>\n        <input\n          type=\"tel\"\n          onChange={e => setNumber(e.target.value)}\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"example: 525-17-79\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n};\n\n// class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   onSubmit = e => {\n//     e.preventDefault();\n\n//     const { name, number } = this.state;\n\n//     this.props.onSubmit({\n//       id: nanoid(),\n//       name,\n//       number,\n//     });\n//     this.reset();\n//   };\n\n//   onChangeInput = e => {\n//     const { name, value } = e.target;\n\n//     this.setState({ [name]: value });\n//   };\n\n//   reset = () => {\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n\n//     return (\n//       <form onSubmit={this.onSubmit}>\n//         <label>\n//           <span>Name:</span>\n//           <input\n//             type=\"text\"\n//             onChange={this.onChangeInput}\n//             value={name}\n//             name=\"name\"\n//             placeholder=\"example: Boykova Marina\"\n//             required\n//           />\n//         </label>\n\n//         <label>\n//           <span>Number:</span>\n//           <input\n//             type=\"tel\"\n//             onChange={this.onChangeInput}\n//             value={number}\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             placeholder=\"example: 525-17-79\"\n//             required\n//           />\n//         </label>\n\n//         <button type=\"submit\">Add Contact</button>\n//       </form>\n//     );\n//   }\n// }\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nconst Paper = ({ children }) => {\n  return <div>{children}</div>;\n};\n\nPaper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Paper;\n","import Paper from '../common/Paper/Paper';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <Paper key={id}>\n        <li>\n          <span>{name}</span>: {number}\n        </li>\n        <button type=\"button\" onClick={() => onDelete(id)}>\n          Delete\n        </button>\n      </Paper>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","const Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <label>\n        <span>Find contacts by name</span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"example: Ivan\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// import React, { useState } from 'react';\n\nimport { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport * as storage from './services/localStorage';\n\nconst STORAGE_KEY = 'contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const savedContacts = storage.get(STORAGE_KEY);\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      storage.save(STORAGE_KEY, contacts);\n    }\n  }\n\n  onSubmit = newContact => {\n    const { id, name, number } = newContact;\n\n    const isInContactList = contact => contact.name === newContact.name;\n\n    this.state.contacts.some(isInContactList)\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, { id, name, number }],\n        }));\n  };\n\n  onChangeInput = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  onFilterChange = () => {\n    const value = this.state.filter;\n    return this.state.contacts.filter(elem =>\n      elem.name.toLowerCase().includes(value.toLowerCase()),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(elem => elem.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div>\n        <div>\n          <h1>Phonebook</h1>\n          <div>\n            <ContactForm onSubmit={this.onSubmit} contacts={contacts} />\n          </div>\n          <h2>Contacts:</h2>\n          <Filter value={filter} onChange={this.onChangeInput} />\n          <ContactList\n            contacts={this.onFilterChange()}\n            onDelete={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}